{"version":3,"file":"static/js/220.7b9c1c07.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SignUpForm/sign-up-form.module.css?db87","components/SignUpForm/SignUpForm.jsx","webpack://react-homework-template/./src/pages/SignUpPage/sign-up-page.module.css?7f5b","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"sign-up-form_form__tlpwI\",\"formContainer\":\"sign-up-form_formContainer__8jPKu\",\"signUpInput\":\"sign-up-form_signUpInput__R0vyd\",\"signUpBtn\":\"sign-up-form_signUpBtn__p9R1Q\"};","import { useState, useId } from 'react';\n\nimport styles from './sign-up-form.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst SignUpForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = state;\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.formContainer}>\n        <label htmlFor={nameId}>Name</label>\n        <input\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          id={nameId}\n          placeholder=\"Name\"\n          minLength={3}\n          required\n          className={styles.signUpInput}\n        />\n      </div>\n      <div className={styles.formContainer}>\n        <label htmlFor={emailId}>Email</label>\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          placeholder=\"Email\"\n          autoComplete=\"username\"\n          required\n          className={styles.signUpInput}\n        />\n      </div>\n      <div className={styles.formContainer}>\n        <label htmlFor={passwordId}>Password</label>\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          minLength={7}\n          placeholder=\"Password\"\n          autoComplete=\"current-password\"\n          required\n          className={styles.signUpInput}\n        />\n      </div>\n      <button className={styles.signUpBtn} type=\"submit\">\n        Sign Up\n      </button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"signUpContainer\":\"sign-up-page_signUpContainer__5+JgC\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport Loader from '../../components/Loader/Loader';\nimport { signup } from '../../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-selectors';\n\nimport styles from './sign-up-page.module.css';\n\nconst SignUpPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <main>\n      <div className={styles.signUpContainer}>\n        <h1>Please Sign Up</h1>\n        {authLoading && <Loader />}\n        <SignUpForm onSubmit={handleSignup} />\n        {authError && <p style={{ color: 'red' }}>{authError}</p>}\n      </div>\n    </main>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsxs","autoComplete","e","preventDefault","className","styles","children","_jsx","htmlFor","onChange","id","placeholder","minLength","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","Loader","SignUpForm","data","signup","style","color"],"sourceRoot":""}