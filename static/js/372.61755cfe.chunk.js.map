{"version":3,"file":"static/js/372.61755cfe.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/MyContacts/ContactsListForm/contacts-list-form.module.css?ade3","components/MyContacts/ContactsListForm/ContactsListForm.jsx","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactsList/contacts-list.module.css?be56","components/MyContacts/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactsFilter/contacts-filter.module.css?2820","components/MyContacts/ContactsFilter/ContactsFilter.jsx","components/MyContacts/MyContacts.jsx"],"sourcesContent":["export const getAllContacts = store => store.contacts;\nexport const getFilter = store => store.filter;\nexport const getFilteredContacts = store => {\n  const { contacts, filter } = store;\n  const { items } = contacts;\n  if (!filter) {\n    return items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = items.filter(({ name }) => {\n    const normalizedName = name.toLowerCase();\n\n    return normalizedName.includes(normalizedFilter);\n  });\n\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contacts-list-form_form__w4UXn\",\"formContainer\":\"contacts-list-form_formContainer__lBXID\",\"phonebookInput\":\"contacts-list-form_phonebookInput__p64Vi\",\"phonebookButton\":\"contacts-list-form_phonebookButton__7BrJo\"};","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../../redux/selectors';\n\nimport styles from './contacts-list-form.module.css';\n\nconst ContactListForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const phonebookName = e.target.elements.name;\n    const phonebookNumber = e.target.elements.number;\n\n    const normalizedName = phonebookName.value.toLowerCase();\n    const isDublicate = contacts.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isDublicate) {\n      alert(`${phonebookName.value} is already in contacts`);\n    } else {\n      dispatch(\n        addContact({\n          id: nanoid(),\n          name: phonebookName.value,\n          number: phonebookNumber.value,\n        })\n      );\n      e.target.reset();\n    }\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.formContainer}>\n          <label htmlFor=\"phonebookName\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            required\n            placeholder=\"Enter a name\"\n            className={styles.phonebookInput}\n          />\n        </div>\n        <div className={styles.formContainer}>\n          <label htmlFor=\"phonebookNumber\">Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            required\n            className={styles.phonebookInput}\n            placeholder=\"Enter the number\"\n          />\n        </div>\n        <button className={styles.phonebookButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      <h2>Contacts</h2>\n    </>\n  );\n};\n\nexport default ContactListForm;\n","import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonDelete\":\"contacts-list_buttonDelete__bkesa\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Loader from '../../Loader/Loader';\n\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../../redux/selectors';\nimport ErrorMessage from '../../ErrorMessage/ErrorMessage';\n\nimport styles from './contacts-list.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(getFilteredContacts);\n  const { isLoading, error } = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const elements = items.map(({ id, name, number }) => (\n    <li key={id} className={styles.item}>\n      <p>\n        {' '}\n        {name}: {number}{' '}\n      </p>\n      <button\n        onClick={() => handleDeleteContact(id)}\n        type=\"button\"\n        className={styles.btn}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      <ul className={styles.list}>{elements}</ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"contacts-filter_filterInput__lU3ae\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../../redux/filter/filter-slice';\n\nimport styles from './contacts-filter.module.css';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <input\n      onChange={handleChange}\n      name=\"filter\"\n      placeholder=\"Search\"\n      className={styles.input}\n    />\n  );\n};\n\nexport default ContactFilter;\n","import ContactListForm from './ContactsListForm/ContactsListForm';\nimport ContactList from './ContactsList/ContactsList';\nimport ContactFilter from './ContactsFilter/ContactsFilter';\n\n// import styles from './my-contacts.module.css';\n\nconst MyContacts = () => {\n  return (\n    <div>\n      <ContactListForm />\n      <ContactFilter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default MyContacts;\n"],"names":["getFilteredContacts","store","contacts","filter","items","normalizedFilter","toLowerCase","_ref","name","includes","dispatch","useDispatch","useSelector","_jsxs","_Fragment","children","_jsx","onSubmit","e","preventDefault","phonebookName","target","elements","phonebookNumber","number","normalizedName","value","some","contact","alert","concat","addContact","id","nanoid","reset","className","styles","htmlFor","type","required","placeholder","message","_useSelector","isLoading","error","useEffect","fetchContacts","map","onClick","deleteContact","handleDeleteContact","Loader","ErrorMessage","onChange","setFilter","ContactListForm","ContactFilter","ContactList"],"sourceRoot":""}